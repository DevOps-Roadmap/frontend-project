# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
   sudo apt-get update
   sudo apt-get install -y npm
  displayName: 'Installing npm using apt-get'

- script: |
   npm audit || true
  displayName: 'scanning the dependencies'

- script: |
   npm run test || true
  displayName: 'perform unit test'

- script: |
   sonar-scanner .\ || true
  displayName: 'review code'

- script: |
   npm install
   npm run build
  displayName: 'Get all dependencies and create a executable files'

- script: |
   sudo apt-get install wget apt-transport-https gnupg lsb-release
   wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
   echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
   sudo apt-get update
   sudo apt-get install trivy
  displayName: 'Installing trivy'

- script: |
   trivy config Dockerfile
  displayName: 'review code'

- script: |
   BASE_IMAGE=`grep FROM Dockerfile | awk '{print $2}'`
   trivy image $BASE_IMAGE
  displayName: 'scanning the base image'

- script: |
   trivy config K8s
  displayName: 'scanning the manisfest files'

- script: |
   docker build -t incharagowda/frontend-project:1.0.1 -f Dockerfile
  displayName: 'Build the container image'